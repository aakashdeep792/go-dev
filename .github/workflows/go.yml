# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Test
    runs-on: ubuntu-latest
    services:
      kafka:
        image: krisgeus/docker-kafka
        ports:
        - 2008:2008
        - 2009:2009
        env:
          ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:2008,INTERNAL://localhost:2009'
          LISTENERS: 'PLAINTEXT://0.0.0.0:2008,INTERNAL://0.0.0.0:2009'
          SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT'
          INTER_BROKER: 'INTERNAL'
          KAFKA_CREATE_TOPICS: 'cc-event:36:1,test-topic'
          KAFKA_HOSTS: 'localhost:2008,localhost:2009'
          KAFKA_TOPIC: 'cc-event:36:1'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # added sleep 
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash
        
      # Runs a single command using the runners shell
      - name: Runs a single command
        id: docker
        run: |
          echo "::set-output name=kafkaHome::$(docker exec ${{ job.services.kafka.id }} env | grep KAFKA_HOME | cut -d'=' -f2)
          echo $KAFKA_HOME
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo ${{ steps.docker.outputs.kafkaHome }}
          docker exec ${{ job.services.kafka.id }} /opt/kafka_2.12-2.3.0/bin/kafka-topics.sh --create --zookeeper localhost  --partitions 3 --replication-factor 1  --topic abcc
          echo Add other actions to build,
          echo test, and deploy your project.
