# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ master development ]
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
#     services:
#       redis:
#         image: redis
#         ports:
#         - 6379:6379
        
#         options: >-
#           --user root
#           --entrypoint redis-server
#           --health-cmd "redis-cli ping"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

         

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: create redis container  
      run: |  
        
        echo $HOME
        docker run -v $HOME/work/go-dev/go-dev/.github/setups/redis-conf:/usr/local/etc/redis   --name krogo-try -p 6379:6379 --health-cmd "redis-cli ping" --health-interval 10s  --health-timeout 5s  --health-retries 5 -d redis:latest  redis-server /usr/local/etc/redis/redis.conf
        docker logs krogo-try 
        docker exec krogo-try redis-cli --user redis --pass redis123 PING
        docker start krogo-try
#         docker run  -v /home/runner/work/go-dev/go-dev/.github/setups/redis-config:/usr/local/etc/redis   --name krogo-try -p 6379:6379 --health-cmd "redis-cli ping" --health-interval 10s  --health-timeout 5s  --health-retries 5 -d redis:latest  redis-server /usr/local/etc/redis/redis.conf
#         docker exec --user root ${{ job.services.redis.id }} redis-cli ACL SETUSER redis on  allkeys allcommands >redis123
#         docker logs ${{ job.services.redis.id }}
#         docker exec ${{ job.services.redis.id }} redis-cli --user redis --pass redis123
#         docker logs ${{ job.services.redis.id }} 
#         docker exec ${{ job.services.redis.id }} redis-cli PING
#         docker exec krogo-try redis-cli PING
        
#         docker run  -v ./.github/setups/redis-conf:/usr/local/etc/redis   --name krogo-try -p 2002:6379 --health-cmd "redis-cli ping" --health-interval 10s  --health-timeout 5s  --health-retries 5 -d redis:latest  redis-server /usr/local/etc/redis/redis.conf    
#         docker logs krogo-try
#         pwd
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

   

    - name: Get dependencies
      run: |
        docker exec krogo-try redis-cli PING
       # go mod init
      #  go get -v -t -d ./...

#     - name: Test
     
#       run: |
#         mkdir build
#         go test ./... -v -coverprofile build/coverage.txt -coverpkg=./... -timeout 900s
#         cat build/coverage.txt | grep -v '.pb.go' > build/coverage.out
#         go tool cover -func build/coverage.out

#     - uses: actions/upload-artifact@v2
#       with:
#         name: build
#         path: build/coverage.out
